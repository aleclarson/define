// Generated by CoffeeScript 1.10.0
var Property;

Property = require("../src/property");

describe("Property()", function() {
  it("supports writable properties", function() {
    var obj, prop;
    prop = Property({
      value: 1
    });
    expect(prop.simple).toBe(true);
    expect(prop.writable).toBe(true);
    prop.define(obj = {}, "foo");
    expect(obj.foo).toBe(1);
    obj.foo = 2;
    return expect(obj.foo).toBe(2);
  });
  it("supports unwritable properties", function() {
    var obj, prop;
    prop = Property({
      writable: false,
      value: 1
    });
    expect(prop.simple).toBe(!isDev);
    prop.define(obj = {}, "foo");
    expect(obj.foo).toBe(1);
    if (isDev) {
      return expect(function() {
        return obj.foo = 2;
      }).toThrow();
    }
  });
  return it("supports frozen properties", function() {
    var obj, prop;
    prop = Property({
      frozen: true,
      value: 1
    });
    expect(prop.simple).toBe(false);
    expect(prop.writable).toBe(false);
    expect(prop.configurable).toBe(false);
    prop.define(obj = {}, "foo");
    expect(obj.foo).toBe(1);
    if (isDev) {
      expect(function() {
        return obj.foo = 2;
      }).toThrow();
      return expect(function() {
        return prop.define(obj, "foo");
      }).toThrow();
    }
  });
});
